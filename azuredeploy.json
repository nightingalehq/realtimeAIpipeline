{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "workflow_name": {
            "defaultValue": "redgatestreamed",
            "type": "String"
        }
    },
    "variables": {
        "subscription" : "[subscription().Id]",
        "location": "[resourceGroup().location]",
        "connections_azureblob_externalid":"[concat(variables('subscription'),'/resourceGroups/',resourceGroup().name,'/providers/Microsoft.Web/connections/azureblob')]",
        "connections_eventhubs_externalid": "[concat(variables('subscription'),'/resourceGroups/',resourceGroup().name,'/providers/Microsoft.Web/connections/eventhubs')]",
        "connections_twitter_externalid":  "[concat(variables('subscription'),'/resourceGroups/',resourceGroup().name,'providers/Microsoft.Web/connections/twitter')]",
        "azureblob": "[concat(variables('subscription'),'/providers/Microsoft.Web/locations/',variables('location'),'/managedApis/azureblob')]",
        "eventhubs":  "[concat(variables('subscription'),'/providers/Microsoft.Web/locations/',variables('location'),'/managedApis/eventhubs')]",
        "twitter": "[concat(variables('subscription'),'/providers/Microsoft.Web/locations/',variables('location'),'/managedApis/twitter')]"
    },
    "resources": [
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "azureblob",
            "location": "[resourceGroup().location]",
            "properties": {
                "displayName": "Azure Blob",
                "customParameterValues": {},
                "api": {
                    "id": "[variables('azureblob')]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "eventhubs",
            "location": "[resourceGroup().location]",
            "properties": {
                "displayName": "Event Hubs",
                "customParameterValues": {},
                "api": {
                    "id": "[variables('eventhubs')]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "twitter",
            "location": "[resourceGroup().location]",
            "properties": {
                "displayName": "Twitter",
                "customParameterValues": {},
                "api": {
                    "id": "[variables('twitter')]"
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflow_name')]",
            "location": "[variables('location')]",
            "dependsOn":[
                "azureblob",
                "eventhubs",
                "twitter"
            ],
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "When_a_new_tweet_is_posted": {
                            "recurrence": {
                                "frequency": "Second",
                                "interval": 30
                            },
                            "splitOn": "@triggerBody()?['value']",
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['twitter']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/onnewtweet",
                                "queries": {
                                    "searchQuery": "[concat('#', parameters('workflow_name'))]"
                                }
                            }
                        }
                    },
                    "actions": {
                        "Condition": {
                            "actions": {
                                "For_each": {
                                    "foreach": "@triggerBody()?['MediaUrls']",
                                    "actions": {
                                        "Create_blob": {
                                            "runAfter": {
                                                "HTTP": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "body": "@body('HTTP')",
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['azureblob']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "path": "/datasets/default/files",
                                                "queries": {
                                                    "folderPath": "images",
                                                    "name": "@{uriPath(items('For_each'))}",
                                                    "queryParametersSingleEncoded": true
                                                }
                                            },
                                            "runtimeConfiguration": {
                                                "contentTransfer": {
                                                    "transferMode": "Chunked"
                                                }
                                            }
                                        },
                                        "HTTP": {
                                            "runAfter": {},
                                            "type": "Http",
                                            "inputs": {
                                                "method": "GET",
                                                "uri": "@{items('For_each')}"
                                            }
                                        }
                                    },
                                    "runAfter": {
                                        "Send_one_or_more_events_to_the_Event_Hub_partition": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Foreach"
                                },
                                "Send_event": {
                                    "runAfter": {},
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": [
                                            {
                                                "ContentData": "@{base64(triggerBody())}"
                                            }
                                        ],
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['eventhubs']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/@{encodeURIComponent('eventhub')}/events/batch"
                                    }
                                }
                            },
                            "runAfter": {},
                            "expression": {
                                "and": [
                                    {
                                        "equals": [
                                            "@triggerBody()?['OriginalTweet']",
                                            "@null"
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azureblob": {
                                "connectionId": "[variables('connections_azureblob_externalid')]",
                                "connectionName": "azureblob",
                                "id": "[variables('azureblob')]"
                            },
                            "eventhubs": {
                                "connectionId": "[variables('connections_eventhubs_externalid')]",
                                "connectionName": "eventhubs",
                                "id": "[variables('eventhubs')]"
                            },
                            "twitter": {
                                "connectionId": "[variables('connections_twitter_externalid')]",
                                "connectionName": "twitter",
                                "id": "[variables('twitter')]"
                            }
                        }
                    }
                }
            }
        }
    ]
}